name: Release

on:
  release:
    types: [created]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Configure Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build for all platforms
        run: |
          nix develop -c ctfd-alerts-build

      - name: Upload Linux AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/ctfd-alerts-linux-amd64
          asset_name: ctfd-alerts-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/ctfd-alerts-linux-arm64
          asset_name: ctfd-alerts-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/ctfd-alerts-darwin-amd64
          asset_name: ctfd-alerts-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/ctfd-alerts-darwin-arm64
          asset_name: ctfd-alerts-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/ctfd-alerts-windows-amd64.exe
          asset_name: ctfd-alerts-windows-amd64.exe
          asset_content_type: application/octet-stream
